{"ast":null,"code":"var _jsxFileName = \"/Users/turgunbekrustamov/Desktop/book-store/src/components/sort-products/sort-products.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { Button } from \"../button\";\nimport { CartItem } from \"../cart-item\";\nimport { BOOKS } from \"../../pages/home-page/home-page\";\nimport { BookItem } from '../../components/book-item';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst movies = [{\n  id: 1,\n  name: 'Matrix',\n  country: 9,\n  collection: 300,\n  //in CRs\n  releasedOn: 1999\n}, {\n  id: 2,\n  name: 'Tere Nam',\n  country: 3,\n  collection: 101,\n  releasedOn: 2004\n}, {\n  id: 3,\n  name: 'Bahubali',\n  country: 4,\n  collection: 500,\n  releasedOn: 1987\n}];\n\nfunction SortProduct() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [sortType, setSortType] = useState('albums');\n  useEffect(() => {\n    const sortArray = type => {\n      const types = {\n        title: 'title',\n        authors: 'authors'\n      };\n      const sortProperty = types[type];\n      const sorted = [...BOOKS].sort((a, b) => b[sortProperty] - a[sortProperty]);\n      setData(sorted);\n    };\n\n    sortArray(sortType);\n  }, [sortType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSortType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"authors\",\n        children: \"Authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page\",\n      children: data.map(book => /*#__PURE__*/_jsxDEV(BookItem, {\n        book: book\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SortProduct, \"kzAfolCNFqc+lytm9rJhYvlO9sU=\");\n\n_c = SortProduct;\nexport default SortProduct; //   const items = useSelector((state) => state.cart.itemsInCart);\n//   return (\n//     <div className=\"cart-menu\">\n//       <div className=\"cart-menu__books-list\">\n//         {items.length > 0\n//           ? items.map((book) => (\n//               <CartItem\n//                 key={book.image}\n//                 image={book.image}\n//                 price={book.price}\n//                 title={book.title}\n//                 id={book.id}\n//               />\n//             ))\n//           : \"Список желаемых книг пуст\"}\n//       </div>\n//       {items.length > 0 ? (\n//         <div className=\"cart-menu__arrange\">\n//           <div className=\"cart-menu__total-price\">\n//             <span>Итого:</span>\n//             <span>{calcTotalPrice(items)} сом.</span>\n//           </div>\n//           <Button type=\"primary\" size=\"m\" onClick={onClick}>\n//             Оформить заказ\n//           </Button>\n//         </div>\n//       ) : null}\n//     </div>\n//   );\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"SortProduct\");","map":{"version":3,"sources":["/Users/turgunbekrustamov/Desktop/book-store/src/components/sort-products/sort-products.jsx"],"names":["useSelector","Button","CartItem","BOOKS","BookItem","React","useState","useEffect","movies","id","name","country","collection","releasedOn","SortProduct","data","setData","sortType","setSortType","sortArray","type","types","title","authors","sortProperty","sorted","sort","a","b","e","target","value","map","book"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAAQC,KAAR,QAAoB,iCAApB;AACA,SAASC,QAAT,QAAyB,4BAAzB;AAGA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AACA,MAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,OAAO,EAAE,CAHX;AAIEC,EAAAA,UAAU,EAAE,GAJd;AAImB;AACjBC,EAAAA,UAAU,EAAE;AALd,CADa,EAQb;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,OAAO,EAAE,CAHX;AAIEC,EAAAA,UAAU,EAAE,GAJd;AAKEC,EAAAA,UAAU,EAAE;AALd,CARa,EAeb;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,OAAO,EAAE,CAHX;AAIEC,EAAAA,UAAU,EAAE,GAJd;AAKEC,EAAAA,UAAU,EAAE;AALd,CAfa,CAAf;;AAuBA,SAASC,WAAT,GAAuB;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,QAAD,CAAxC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,SAAS,GAAGC,IAAI,IAAI;AACxB,YAAMC,KAAK,GAAG;AACZC,QAAAA,KAAK,EAAE,OADK;AAEZC,QAAAA,OAAO,EAAE;AAFG,OAAd;AAIA,YAAMC,YAAY,GAAGH,KAAK,CAACD,IAAD,CAA1B;AACA,YAAMK,MAAM,GAAG,CAAC,GAAGtB,KAAJ,EAAWuB,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACJ,YAAD,CAAD,GAAkBG,CAAC,CAACH,YAAD,CAA7C,CAAf;AACAR,MAAAA,OAAO,CAACS,MAAD,CAAP;AACD,KARD;;AASAN,IAAAA,SAAS,CAACF,QAAD,CAAT;AACD,GAXQ,EAWN,CAACA,QAAD,CAXM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,QAAQ,EAAGY,CAAD,IAAOX,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACQhB,IAAI,CAACiB,GAAL,CAASC,IAAI,iBAAI,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB,SAA2BA,IAAI,CAACxB,EAAhC;AAAA;AAAA;AAAA;AAAA,cAAjB;AADR;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAvCQK,W;;KAAAA,W;AAwCT,eAAeA,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { Button } from \"../button\";\nimport { CartItem } from \"../cart-item\";\nimport {BOOKS} from \"../../pages/home-page/home-page\"\nimport { BookItem } from '../../components/book-item';\n\n\nimport React, { useState, useEffect } from 'react';\nconst movies = [\n  {\n    id: 1,\n    name: 'Matrix',\n    country: 9,\n    collection: 300, //in CRs\n    releasedOn: 1999,\n  },\n  {\n    id: 2,\n    name: 'Tere Nam',\n    country: 3,\n    collection: 101,\n    releasedOn: 2004,\n  },\n  {\n    id: 3,\n    name: 'Bahubali',\n    country: 4,\n    collection: 500,\n    releasedOn: 1987,\n  },\n];\nfunction SortProduct() {\n\n  const [data, setData] = useState([]);\n  const [sortType, setSortType] = useState('albums');\n\n\n  useEffect(() => {\n    const sortArray = type => {\n      const types = {\n        title: 'title',\n        authors: 'authors',\n      };\n      const sortProperty = types[type];\n      const sorted = [...BOOKS].sort((a, b) => b[sortProperty] - a[sortProperty]);\n      setData(sorted);\n    };\n    sortArray(sortType);\n  }, [sortType]);\n  \n  \n  return (\n    <div className=\"App\">\n      <select onChange={(e) => setSortType(e.target.value)}> \n        <option value=\"title\">Title</option>\n        <option value=\"authors\">Authors</option>\n      </select>\n\n      <div className=\"home-page\">\n            { data.map(book => <BookItem book={book} key={book.id}/>) }\n\n        </div>\n      {/* {data.map(book => (\n        <div key={book.id} style={{ margin: '30px' }}>\n          <div>{`Title: ${book.title}`}</div>\n          <div>{`Authors: ${book.authors}`}</div>\n        </div>\n      ))} */}\n    </div>\n  );\n}\nexport default SortProduct;\n\n//   const items = useSelector((state) => state.cart.itemsInCart);\n//   return (\n//     <div className=\"cart-menu\">\n//       <div className=\"cart-menu__books-list\">\n//         {items.length > 0\n//           ? items.map((book) => (\n//               <CartItem\n//                 key={book.image}\n//                 image={book.image}\n//                 price={book.price}\n//                 title={book.title}\n//                 id={book.id}\n//               />\n//             ))\n//           : \"Список желаемых книг пуст\"}\n//       </div>\n//       {items.length > 0 ? (\n//         <div className=\"cart-menu__arrange\">\n//           <div className=\"cart-menu__total-price\">\n//             <span>Итого:</span>\n//             <span>{calcTotalPrice(items)} сом.</span>\n//           </div>\n//           <Button type=\"primary\" size=\"m\" onClick={onClick}>\n//             Оформить заказ\n//           </Button>\n//         </div>\n//       ) : null}\n//     </div>\n//   );\n// };\n\n\n "]},"metadata":{},"sourceType":"module"}